{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["\nimport { btnStart, newDays, newHours, newMinutes, newSeconds } from \"./refs.js\"\nimport flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\n\n\nbtnStart.disabled = true;\n\nlet userSelectedDate;\n\nbtnStart.addEventListener(\"click\", () => {\n    \n    btnStart.disabled = true;\n    \n    \n   const clockInterval = setInterval(() => {\n          \n        const dataNow = Date.now();\n        const ms = userSelectedDate - dataNow;\n        const conver = convertMs(ms);\n            \n        const stopNewDays = newDays.textContent = addLeadingZero(conver.days);\n        const stopNewHours = newHours.textContent = addLeadingZero(conver.hours);\n        const stopNewMinutes = newMinutes.textContent = addLeadingZero(conver.minutes);\n        const stopNewSeconds = newSeconds.textContent = addLeadingZero(conver.seconds);\n       \n        if (stopNewDays == 0 && stopNewHours == 0 && stopNewMinutes == 0 && stopNewSeconds == 0) {\n            clearInterval(clockInterval);\n        }\n    }, 1000);\n    \n  }   \n)\n\nfunction addLeadingZero(value) {\n    return `${value}`.toString().padStart(2, \"0\")\n    \n}\n\nfunction nowBtnDisabled() {\n    if (userSelectedDate > options.defaultDate) {\n      btnStart.disabled = false;\n    } else {\n        iziToast.warning({\n            title: 'Error',\n            message: 'Please choose a date in the future',\n            color: 'yellow',\n            position: 'topCenter',\n            titleColor: 'red',\n            messageColor: 'green',\n            messageSize: '20',\n            timeout: 3000,\n});\n }\n} \n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n      const userDate = selectedDates[0];\n      userSelectedDate = userDate;\n      nowBtnDisabled();\n  },\n};\n\n\n\nflatpickr(\"#datetime-picker\", options\n);\n\nfunction convertMs(ms) {\n\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n"],"names":["btnStart","userSelectedDate","clockInterval","dataNow","ms","conver","convertMs","stopNewDays","newDays","addLeadingZero","stopNewHours","newHours","stopNewMinutes","newMinutes","stopNewSeconds","newSeconds","value","nowBtnDisabled","options","iziToast","selectedDates","flatpickr","days","hours","minutes","seconds"],"mappings":"iIASAA,EAAS,SAAW,GAEpB,IAAIC,EAEJD,EAAS,iBAAiB,QAAS,IAAM,CAErCA,EAAS,SAAW,GAGrB,MAAME,EAAgB,YAAY,IAAM,CAEnC,MAAMC,EAAU,KAAK,MACfC,EAAKH,EAAmBE,EACxBE,EAASC,EAAUF,CAAE,EAErBG,EAAcC,EAAQ,YAAcC,EAAeJ,EAAO,IAAI,EAC9DK,EAAeC,EAAS,YAAcF,EAAeJ,EAAO,KAAK,EACjEO,EAAiBC,EAAW,YAAcJ,EAAeJ,EAAO,OAAO,EACvES,EAAiBC,EAAW,YAAcN,EAAeJ,EAAO,OAAO,EAEzEE,GAAe,GAAKG,GAAgB,GAAKE,GAAkB,GAAKE,GAAkB,GAClF,cAAcZ,CAAa,CAElC,EAAE,GAAI,CAER,CACH,EAEA,SAASO,EAAeO,EAAO,CAC3B,MAAO,GAAGA,CAAK,GAAG,SAAQ,EAAG,SAAS,EAAG,GAAG,CAEhD,CAEA,SAASC,GAAiB,CAClBhB,EAAmBiB,EAAQ,YAC7BlB,EAAS,SAAW,GAElBmB,EAAS,QAAQ,CACb,MAAO,QACP,QAAS,qCACT,MAAO,SACP,SAAU,YACV,WAAY,MACZ,aAAc,QACd,YAAa,KACb,QAAS,GACrB,CAAC,CAED,CAEA,MAAMD,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQE,EAAe,CAEnBnB,EADiBmB,EAAc,CAAC,EAEhCH,GACH,CACH,EAIAI,EAAU,mBAAoBH,CAC9B,EAEA,SAASZ,EAAUF,EAAI,CAOrB,MAAMkB,EAAO,KAAK,MAAMlB,EAAK,KAAG,EAC1BmB,EAAQ,KAAK,MAAOnB,EAAK,MAAO,IAAI,EACpCoB,EAAU,KAAK,MAAQpB,EAAK,MAAO,KAAQ,GAAM,EACjDqB,EAAU,KAAK,MAASrB,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAkB,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}